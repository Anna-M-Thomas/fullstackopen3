{"version":3,"sources":["components/Person.js","components/Filter.js","components/Form.js","components/Notification.js","services/backend.js","App.js","index.js"],"names":["Person","person","deleteHandler","name","number","onClick","Filter","filter","filterChangeHandler","value","onChange","Form","props","onSubmit","submitHandler","newName","nameChangeHandler","newNumber","numberChangeHandler","type","Notification","message","className","baseURL","axios","get","then","response","data","post","id","delete","put","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","content","setMessage","useEffect","updatePeople","backend","resetInfo","showMessage","setTimeout","filteredPersons","toLowerCase","includes","window","confirm","status","event","target","preventDefault","find","object","returnedPerson","map","catch","originalPerson","concat","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7d833f8.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Person = ({ person, deleteHandler }) => {\n  return (\n    <div>\n      {person.name} {person.number}{\" \"}\n      <button onClick={() => deleteHandler(person)}>delete</button>\n    </div>\n  );\n};\n\nexport default Person;\n","import React from \"react\";\n\nconst Filter = ({ filter, filterChangeHandler }) => {\n  return (\n    <div>\n      Filter shown with: <input value={filter} onChange={filterChangeHandler} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst Form = (props) => {\n  return (\n    <form onSubmit={props.submitHandler}>\n      <div>\n        name: <input value={props.newName} onChange={props.nameChangeHandler} />\n      </div>\n      <div>\n        phone number:\n        <input value={props.newNumber} onChange={props.numberChangeHandler} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className={type}>{message}</div>;\n};\n\nexport default Notification;\n","import axios from \"axios\";\n\nconst baseURL = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseURL);\n  return request.then((response) => response.data);\n};\n\nconst newPerson = (person) => {\n  const request = axios.post(baseURL, person);\n  return request.then((response) => response.data);\n};\n\nconst deletePerson = (id) => {\n  const request = axios.delete(`${baseURL}/${id}`);\n  return request.then((response) => response);\n};\n\nconst updatePerson = (person) => {\n  const request = axios.put(`${baseURL}/${person.id}`, person);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll, newPerson, deletePerson, updatePerson };\n","import React, { useState, useEffect } from \"react\";\nimport Person from \"./components/Person\";\nimport Filter from \"./components/Filter\";\nimport Form from \"./components/Form\";\nimport Notification from \"./components/Notification\";\nimport backend from \"./services/backend\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [message, setMessage] = useState({\n    content: null,\n    type: null,\n  });\n\n  useEffect(() => {\n    updatePeople();\n  }, []);\n\n  const updatePeople = () => {\n    backend.getAll().then((data) => {\n      setPersons(data);\n    });\n  };\n\n  const resetInfo = () => {\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const showMessage = (message) => {\n    setMessage(message);\n    setTimeout(() => {\n      setMessage({ content: null, type: null });\n    }, 5000);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const person = persons.find((object) => object.name === newName);\n    //Updates phone number for existing person\n    if (\n      person &&\n      window.confirm(\n        `${newName} is already added to phonebook, replace the old number with a new one?`\n      )\n    ) {\n      backend\n        .updatePerson({ ...person, number: newNumber })\n        .then((returnedPerson) => {\n          setPersons(\n            persons.map((person) =>\n              person.id === returnedPerson.id ? returnedPerson : person\n            )\n          );\n          showMessage({\n            content: \"Successfully updated number\",\n            type: \"success\",\n          });\n        })\n        .catch(() => {\n          showMessage({\n            content: `Information of ${person.name} has already been removed from server`,\n            type: \"error\",\n          });\n          setPersons(\n            persons.filter((originalPerson) => originalPerson.id !== person.id)\n          );\n        });\n      resetInfo();\n      return;\n    }\n    //Checks to make sure both fields are filled out\n    if (!newName || !newNumber) {\n      alert(`Please fill in both fields`);\n      return;\n    }\n    //Adds a new person since person doesn't exist (otherwise caught by first if statement)\n    const newObject = { name: newName, number: newNumber };\n    backend.newPerson(newObject).then((returnedPerson) => {\n      setPersons(persons.concat(returnedPerson));\n      showMessage({\n        content: \"Added new person\",\n        type: \"success\",\n      });\n      resetInfo();\n    });\n  };\n\n  const filteredPersons = persons.filter((person) =>\n    person.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const deleteHandler = (person) => {\n    if (window.confirm(`Really delete ${person.name}?`)) {\n      backend.deletePerson(person.id).then((response) => {\n        if (response.status === 204) {\n          showMessage({\n            content: \"Successfully deleted\",\n            type: \"success\",\n          });\n          updatePeople();\n        }\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message.content} type={message.type} />\n      <Filter\n        filter={filter}\n        filterChangeHandler={(event) => setFilter(event.target.value)}\n      />\n      <h2>Add new person</h2>\n      <Form\n        submitHandler={submitHandler}\n        nameChangeHandler={(event) => setNewName(event.target.value)}\n        newNumber={newNumber}\n        newName={newName}\n        numberChangeHandler={(event) => setNewNumber(event.target.value)}\n      />\n      <h2>Numbers</h2>\n      {filteredPersons.map((person) => (\n        <Person\n          key={person.name}\n          person={person}\n          deleteHandler={deleteHandler}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}